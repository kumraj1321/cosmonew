{{#section 'css'}}
    <link rel="stylesheet" href="{{basePath}}/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="{{basePath}}/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="{{basePath}}/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <link rel="stylesheet" href="{{basePath}}/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="{{basePath}}/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <link rel="stylesheet" href="{{basePath}}/plugins/select2/css/select2.css">
    <link rel="stylesheet" href="{{basePath}}/dist/css/main.css">
{{/section}}
{{header/mainHeader}}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Partials Listing according to user</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
                        <li class="breadcrumb-item active"><a href="/collection-builder/new">Add New</a></li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Listed Collections</h3>
                        </div>
                        <form id="datafiling" method="post" action="/data-filing" novalidate>
                            <!-- /.card-header -->

                            {{#each collectionData}}
                                {{>(dynamicPartial 'builderPartials' this.field_type) data=this site_id=../site_id}}

                            {{/each}}

                            <input id="collection_name" name="collection_name" value={{collection_name}} type="text"
                                style="display: none;"></input>
                            <button type="submit" class="datafilingSubmit btn btn-info btn-block" id="btn-submit">Submit
                                Data</button>
                        </form>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
{{#section 'script'}}
    <!-- DataTables  & Plugins -->
    <script src="{{basePath}}/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="{{basePath}}/plugins/jquery-validation/additional-methods.min.js"></script>
    <script src="{{basePath}}/plugins/select2/js/select2.full.min.js"></script>
    <script src="{{basePath}}/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="{{basePath}}/plugins/jszip/jszip.min.js"></script>
    <script src="{{basePath}}/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="{{basePath}}/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="{{basePath}}/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="{{basePath}}/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
    <script>
        let selecteddefaultoption = '["646b20ff61e09c17cf816569"]'
        $( 'form' ).submit( function ( e )
        {
            let submit = 0
            e.preventDefault()

            //validation for the static select(multiple)
            $( '.staticSelect' ).each( function ()
            {
                let value = $( this ).val()
                let idname = $( this ).attr( 'name' )
                let a = $( '.' + idname )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )
                if ( required >= 0 && value.length === 0 )
                {
                    submit += 1
                    $( '.' + idname ).text( 'This is required field.' )
                    $( '.' + idname ).removeAttr( 'style' );
                } else
                {
                    $( '.' + idname ).text( '' )
                }
            } )


            //validation for static select(single)
            $( '.staticSingleSelect' ).each( function ()
            {
                let value = $( this ).val()
                let idname = $( this ).attr( 'name' )
                let a = $( '.' + idname )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )
                if ( required >= 0 )
                {
                    if ( value === null || value === '' || value.length === 0 )
                    {
                        submit += 1
                        $( '.' + idname ).text( 'This is required field.' )
                        $( '.' + idname ).removeAttr( 'style' );
                    } else
                    {
                        $( '.' + idname ).text( '' )
                    }
                }
            } )


            //validations for the dynamic select field(multiple)
            $( '.dynamicSelect' ).each( function ()
            {
                let value = $( this ).val()
                let idname = $( this ).attr( 'name' )
                let a = $( '.' + idname )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )
                if ( required >= 0 && value.length === 0 )
                {
                    submit += 1
                    $( '.' + idname ).text( 'This is required field.' )
                    $( '.' + idname ).removeAttr( 'style' );
                } else
                {
                    $( '.' + idname ).text( '' )
                }
            } )


            //validation for single select(dynamic)
            $( '.dynamicSingleSelect' ).each( function ()
            {
                let val = $( this ).val()
                let idname = $( this ).attr( 'name' )
                let a = $( '.' + idname )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )
                if ( required >= 0 )
                {
                    if ( !val || val === '' || val.length === 0 )
                    {
                        submit += 1
                        $( '.' + idname ).text( 'This is required field.' )
                        $( '.' + idname ).removeAttr( 'style' );
                    } else
                    {
                        $( '.' + idname ).text( '' )
                    }
                }
            } )

            //validation for radio field
            $( '.radio' ).each( function ()
            {
                let radiodata = $( this ).val()
                let idname = $( this ).attr( 'id' )
                //to check if the radio field is required or not
                let a = $( '.' + idname )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )

                let allradio = $( '.' + idname )
                let anychecked = 0
                $( '.' + idname ).each( function ()
                {
                    let type = $( this ).attr( "type" )
                    if ( type && type === 'radio' )
                    {
                        let check = $( this ).is( ':checked' )
                        if ( check )
                        {
                            anychecked += 1
                        }
                    }
                } )
                if ( required >= 0 && anychecked === 0 )
                {
                    submit += 1
                    $( '.' + idname ).text( 'This is required field.' )
                    $( '.' + idname ).removeAttr( 'style' );
                } else
                {
                    $( '.' + idname ).text( '' )
                }

            } )
            //validation for date field
            $( '.date' ).each( function ()
            {
                let datedata = $( this ).val()
                let idname = $( this ).attr( 'id' )
                let a = $( '.' + idname ).attr( 'class' )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )
                if ( required >= 0 && datedata.length === 0 )
                {
                    submit += 1
                    $( '.' + idname ).text( 'This is required field.' )
                    $( '.' + idname ).removeAttr( 'style' );
                    return
                } else
                {
                    $( '.' + idname ).text( '' )
                }
            } )

            //validation for email fields
            $( '.email' ).each( function ()
            {
                let emaildata = $( this ).val()
                let emailregex = /^\w+([\.-]?\w+)*@\w+([\a-z-]?\w+)*(\.\w{2,3})+$/

                let idname = $( this ).attr( 'id' )
                let a = $( '.' + idname ).attr( 'class' )
                b = $( '.' + idname ).attr( 'class' ).split( ' ' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )

                if ( required >= 0 && emaildata.length === 0 )
                {
                    submit += 1
                    $( '.' + idname ).text( 'This is required field.' )
                    $( '.' + idname ).removeAttr( 'style' );
                    return
                } else
                {
                    $( '.' + idname ).text( '' )
                }
                if ( emaildata.length > 0 && !emailregex.test( emaildata ) )
                {
                    submit += 1
                    $( '.' + idname ).text( 'Please enter valid email.' )
                    $( '.' + idname ).removeAttr( 'style' );
                    return
                } else
                {
                    $( '.' + idname ).text( '' )
                }
                let allclass = $( this ).attr( 'class' )
                allclass = allclass.split( ' ' )
                let collection_name = $( "#collection_name" ).val()
                if ( allclass.indexOf( 'unique' ) >= 0 )
                {
                    $.ajax( {

                        type: "post",
                        url: '/data-filing/findunique',
                        async: false,
                        data: { data: JSON.stringify( { "collection_name": collection_name, "field_name": idname, "field_value": emaildata } ) },
                        success: function ( data )
                        {

                            if ( data )
                            {
                                submit += 1
                                $( '.' + idname ).text( 'This value already exists!' )
                                $( '.' + idname ).removeAttr( 'style' );
                            } else
                            {
                                $( '.' + idname ).text( '' )
                            }
                        }
                    } )
                }
            } )


            //validation for text field
            $( '.text' ).each( function ()
            {
                let minLength = $( this ).attr( 'minlength' )
                let maxLength = $( this ).attr( 'maxlength' )
                let data = $( this ).val()
                let idname = $( this ).attr( 'id' )
                let required = $( '.' + idname ).attr( 'class' ).split( ' ' ).indexOf( 'required' )

                if ( required >= 0 && data.length === 0 )
                {
                    submit += 1
                    $( '.' + idname ).text( 'This is required field.' )
                    $( '.' + idname ).removeAttr( 'style' );
                    return
                } else
                {
                    $( '.' + idname ).text( '' )
                }
                if ( data.length > 0 && data.length < minLength )
                {
                    submit += 1
                    $( '.' + idname ).text( 'Please fulfil minimum length requirement.' )
                    $( '.' + idname ).removeAttr( 'style' );
                } else
                {
                    $( '.' + idname ).text( '' )
                }


            } )

            if ( submit === 0 )
            {
                e.currentTarget.submit()
            }
        } )

        $( "select" ).each( function ()
        {
            var input = $( this ); // This is the jquery object of the input, do what you will
            let inputclass = $( this ).attr( 'class' )
            if ( inputclass.indexOf( 'dynamicSingleSelect' ) < 0 && inputclass.indexOf( 'staticSingleSelect' ) )
            {
                $( this ).select2()
            }

        } );
        $( ".text" ).keyup( function ()
        {
            let minLength = $( this ).attr( 'minlength' )
            let maxLength = $( this ).attr( 'maxlength' )
            let data = $( this ).val()
            if ( data.length < minLength )
            {
                $( this ).css( 'color', 'red' );
            } else
            {
                $( this ).css( 'color', 'black' );
            }
            if ( maxLength >= 0 && data.length >= maxLength )
            {
                $( this ).css( 'color', 'green' );
            }

        } )




        let dynamicId = []
        $( ".dynamicSelect" ).each( function ()
        {
            let startid = $( this ).attr( "id" )
            dynamicId.push( startid )
        } )
        $.each( dynamicId, function ( index, id )
        {
            let splitid = id.split( ',' )
            collection_selected = splitid[ 0 ]
            field_selected = splitid[ 1 ]

            $.ajax( {
                type: 'GET',
                context: this,
                url: `/data-filing/multiselect/${ collection_selected }/${ field_selected }`,
                success: function ( data )
                {
                    let a = ""

                    $.each( data, function ( index, option )
                    {
                        a += `<option value=${ option.key }>${ option.value }</option>`
                    } )
                    let thisid = dynamicId[ index ]
                    thisid = thisid.split( ',' )
                    let b = "#" + thisid[ 0 ] + '\\,' + thisid[ 1 ]
                    $( b ).html( a )

                }
            } );
        } )
        let dynamicSingleId = []
        $( '.dynamicSingleSelect' ).each( function ()
        {
            let startid = $( this ).attr( "id" )
            dynamicSingleId.push( startid )
        } )
        $.each( dynamicSingleId, function ( index, id )
        {
            let splitid = id.split( ',' )
            collection_selected = splitid[ 0 ]
            field_selected = splitid[ 1 ]
            $.ajax( {
                type: 'GET',
                context: this,
                url: `/data-filing/multiselect/${ collection_selected }/${ field_selected }`,
                success: function ( data )
                {
                    let thisid = dynamicSingleId[ index ]

                    thisid = thisid.split( ',' )

                    let x = "." + thisid[ 0 ] + '\\,' + thisid[ 1 ] + '\\,' + 'single'
                    let selectedinput = $( x ).text()
                    selectedinput = selectedinput.split( ',' )
                    let a = ""
                    a += `<option disabled selected hidden>Please select field from here..
                </option>`
                    $.each( data, function ( index, option )
                    {
                        let ind = selectedinput.indexOf( option.key )
                        if ( ind === -1 )
                        {
                            a += `<option value=${ option.key }>${ option.value }</option>`
                        } else
                        {
                            a += `<option value=${ option.key } selected=selected>${ option.value }</option>`

                        }
                    } )

                    let b = "#" + thisid[ 0 ] + '\\,' + thisid[ 1 ]
                    $( b ).html( a )

                }
            } );
        } )


    </script>
{{/section}}